{"version":3,"sources":["style.js","error.js","defaultData.js","useInputValue.js","useFormState.js","useErrorMessage.js","App.js","index.js"],"names":["InfoWrapper","styled","div","InfoContent","InfoTitle","h1","Input","input","p","state","isSubmit","FormWrapper","SectionWrapper","SectionTitle","h3","necessary","SectionErrorMessage","SectionDescription","ListWrapper","Button","button","FooterWrapper","Wrapper","FormInfoWrapper","DataList","ul","ListItem","li","ButtonWrapper","FORM_ERROR","error","message","formData","title","name","type","radioContents","description","initialInputValue","nickname","value","email","phone","radio","active","else","useInputValue","useState","localInputValue","window","localStorage","JSON","parse","DATA","inputValue","setInputValue","handleInputValue","e","target","getValueFromInputValue","useFormState","formState","setFormState","controlUpdateForm","useErrorMessage","localMessage","setMessage","checkInputValue","test","ERROR","handleInputConditions","errorMessage","map","data","handleSubmitConditions","stopPropagation","Object","values","some","getErrorMessageFromMessageState","SubmitData","approach","events","onClick","Radio","info","radioRef","content","index","ref","Section","approaches","placeholder","onChange","Info","Footer","App","useRef","useEffect","current","setAttribute","writeValueToLocalStorage","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bcdf63e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const InfoWrapper = styled.div`\r\n  margin-bottom: 40px;\r\n  & > p:nth-child(3) {\r\n    color: red;\r\n    color: #e74149;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const InfoContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  line-height: 2em;\r\n`;\r\n\r\nexport const InfoTitle = styled.h1`\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  margin: 0px 0px 35px 0px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-size: 16px;\r\n  padding: 2px 0px;\r\n  width: 60%;\r\n  margin-top: 10px;\r\n  &:placeholder-shown {\r\n    ${(p) =>\r\n      p.state.isSubmit &&\r\n      `\r\n      color: transparent;\r\n    `}\r\n  }\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  background: white;\r\n  margin: 0 auto;\r\n  padding: 54px 150px 35px 42px;\r\n  max-width: 645px;\r\n  margin-top: 129px;\r\n  box-shadow: 1.8px 2.4px 5px 0 #0000004c;\r\n  border-top: solid 10px #fad312;\r\n`;\r\n\r\nexport const SectionWrapper = styled.div`\r\n  margin-bottom: 40px;\r\n  min-height: 122px;\r\n`;\r\n\r\nexport const SectionTitle = styled.h3`\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  ${(p) =>\r\n    p.necessary &&\r\n    `\r\n    &:before {\r\n      content: ' *';\r\n      color: red;\r\n    }\r\n  `}\r\n`;\r\nexport const SectionErrorMessage = styled.div`\r\n  margin-top: 10px;\r\n  color: red;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  max-width: 60%;\r\n`;\r\n\r\nexport const SectionDescription = styled.div`\r\n  margin-top: 5px;\r\n  color: #3f51b5;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const ListWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n  flex-direction: column;\r\n  & > label {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background: #fad312;\r\n  padding: 10px;\r\n  color: black;\r\n  font-size: 15px;\r\n  border: none;\r\n  margin-bottom: 15px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #f4ce11;\r\n  }\r\n`;\r\n\r\nexport const FooterWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top: 2px solid yellow;\r\n  height: 40px;\r\n  width: 100%;\r\n  background: black;\r\n  color: #999999;\r\n  font-size: 14px;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\nexport const FormInfoWrapper = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(255, 255, 255, 0);\r\n`;\r\n\r\nexport const DataList = styled.ul`\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  padding: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 400px;\r\n  height: 400px;\r\n  background: #f2f2f2;\r\n  border: 1px solid transparent;\r\n  box-shadow: 2px 4px 5px 3px #bbb;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  max-width: 358px;\r\n  overflow-wrap: break-word;\r\n  color: black;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 20px;\r\n  & > button:first-child {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n","const FORM_ERROR = {\r\n  INVALID_EMAIL: {\r\n    error: \"INVALID_EMAIL\",\r\n    message: `\r\n      請輸入大寫英文、小寫英文、數字及合法符號(_.-)\r\n      首字母不可為數字或符號，符號不可連續出現，@ 之前不可有符號，\r\n      後方域名：大小寫英文、數字 + \".\" + 大小寫英文字母\r\n      ex: example@example.com\r\n    `,\r\n  },\r\n  INVALID_PHONE: {\r\n    error: \"INVALID_PHONE\",\r\n    message: `\r\n      請輸入正確的手機格式: 0912345678\r\n    `,\r\n  },\r\n  EMPTY_CONTENT: {\r\n    error: \"EMPTY_CONTENT\",\r\n    message: `\r\n      內容不可為空\r\n    `,\r\n  },\r\n};\r\n\r\nexport { FORM_ERROR };\r\n","export const formData = [\r\n  {\r\n    title: \"暱稱\",\r\n    name: \"nickname\",\r\n    type: \"text\",\r\n    necessary: true,\r\n  },\r\n  {\r\n    title: \"電子郵件\",\r\n    name: \"email\",\r\n    type: \"text\",\r\n    necessary: true,\r\n  },\r\n  {\r\n    title: \"手機號碼\",\r\n    name: \"phone\",\r\n    type: \"text\",\r\n    necessary: true,\r\n  },\r\n  {\r\n    title: \"報名類型\",\r\n    name: \"radio\",\r\n    type: \"radio\",\r\n    radioContents: [\"躺在床上用想像力實作\", \"趴在地上滑手機找現成的\"],\r\n    necessary: true,\r\n  },\r\n  {\r\n    title: \"怎麼知道這個活動的\",\r\n    name: \"active\",\r\n    type: \"text\",\r\n    description: \"\",\r\n    necessary: true,\r\n  },\r\n  {\r\n    title: \"其他\",\r\n    name: \"else\",\r\n    type: \"text\",\r\n    description: \"對活動的一些建議\",\r\n    necessary: false,\r\n  },\r\n];\r\n\r\nexport const initialInputValue = {\r\n  nickname: {\r\n    value: \"\",\r\n  },\r\n  email: {\r\n    value: \"\",\r\n  },\r\n  phone: {\r\n    value: \"\",\r\n  },\r\n  radio: {\r\n    value: \"\",\r\n  },\r\n  active: {\r\n    value: \"\",\r\n  },\r\n  else: {\r\n    value: \"\",\r\n  },\r\n};\r\n","import { useState } from \"react\";\r\nimport { defaultData as DATA } from \"./useStaticData\";\r\n\r\nconst useInputValue = () => {\r\n  const [inputValue, setInputValue] = useState(() => {\r\n    const { localInputValue } = window.localStorage;\r\n    return localInputValue\r\n      ? JSON.parse(localInputValue)\r\n      : {\r\n          ...DATA.initialInputValue,\r\n        };\r\n  });\r\n\r\n  const handleInputValue = (e, name) => {\r\n    const { value } = e.target;\r\n    setInputValue({\r\n      ...inputValue,\r\n      [name]: { value },\r\n    });\r\n  };\r\n\r\n  const getValueFromInputValue = (name) => {\r\n    return inputValue[name].value;\r\n  };\r\n\r\n  return {\r\n    inputValue,\r\n    setInputValue,\r\n    handleInputValue,\r\n    getValueFromInputValue,\r\n  };\r\n};\r\n\r\nexport default useInputValue;\r\n","import { useState } from \"react\";\r\n\r\nconst useFormState = () => {\r\n  const [formState, setFormState] = useState({\r\n    isSubmit: false,\r\n  });\r\n\r\n  const controlUpdateForm = () => {\r\n    setFormState({\r\n      isSubmit: false,\r\n    });\r\n  };\r\n\r\n  return {\r\n    formState,\r\n    setFormState,\r\n    controlUpdateForm,\r\n  };\r\n};\r\n\r\nexport default useFormState;\r\n","import { useState } from \"react\";\r\nimport { defaultData as DATA, FORM_ERROR as ERROR } from \"./useStaticData\";\r\n\r\nconst useErrorMessage = (setFormState, getValueFromInputValue) => {\r\n  const [message, setMessage] = useState(() => {\r\n    const { localMessage } = window.localStorage;\r\n    return localMessage ? JSON.parse(localMessage) : {};\r\n  });\r\n  // 依照輸入的內容判斷是否符合格式，false 則回傳 error message\r\n  // 空字串會回傳空字串，防止未輸入訊息卻跳出錯誤訊息\r\n  const checkInputValue = (name) => {\r\n    const value = getValueFromInputValue(name);\r\n    if (value === \"\") return \"\";\r\n    if (name === \"email\") {\r\n      const emailRegExp =\r\n        /^[a-zA-z][a-zA-Z0-9]*([_.-][A-Za-z0-9]+)*@([a-z]+\\.[a-z]+)/;\r\n      return !emailRegExp.test(value) && ERROR.INVALID_EMAIL.message;\r\n    }\r\n    if (name === \"phone\") {\r\n      const phoneRegExp = /^09\\d{8}/;\r\n      return !phoneRegExp.test(value) && ERROR.INVALID_PHONE.message;\r\n    }\r\n  };\r\n  // 當點擊任何地方，就會判斷有輸入值的 input value\r\n  const handleInputConditions = () => {\r\n    let errorMessage = {};\r\n    DATA.formData.map((data) => {\r\n      // input value 為空字串不做任何改動\r\n      if (checkInputValue(data.name) === \"\") {\r\n        errorMessage = {\r\n          ...errorMessage,\r\n        };\r\n      } else {\r\n        // 不符合格式則輸出錯誤訊息，符合則空字串\r\n        errorMessage = {\r\n          ...errorMessage,\r\n          [data.name]: checkInputValue(data.name) || \"\",\r\n        };\r\n      }\r\n    });\r\n\r\n    setMessage({\r\n      ...message,\r\n      ...errorMessage,\r\n    });\r\n  };\r\n  // 點擊送出按鈕會判斷，資料格式是否正確、資料是否為空白\r\n  const handleSubmitConditions = (e) => {\r\n    // 防止點擊送出按鈕執行 handleInputConditions\r\n    e.stopPropagation();\r\n    let errorMessage = {};\r\n    DATA.formData.map((data) => {\r\n      // 必要資料，如果是空字串則輸出錯誤訊息，有資料則輸出空字串\r\n      if (data.necessary) {\r\n        errorMessage = {\r\n          ...errorMessage,\r\n          [data.name]:\r\n            getValueFromInputValue(data.name) === \"\"\r\n              ? ERROR.EMPTY_CONTENT.message\r\n              : \"\",\r\n        };\r\n        // 非必要資料輸出空字串\r\n      } else {\r\n        errorMessage = {\r\n          ...errorMessage,\r\n          [data.name]: \"\",\r\n        };\r\n      }\r\n    });\r\n    // 與上方寫法稍有不同，因為這是最初寫法\r\n    // 而上方為了不蓋掉空字串的錯誤訊息才操作調整\r\n    DATA.formData.map(\r\n      (data) =>\r\n        checkInputValue(data.name) &&\r\n        (errorMessage[data.name] = checkInputValue(data.name))\r\n    );\r\n    // 判斷有無 errorMessage，沒有則將 isSubmit: true 加入 formState\r\n    !Object.values(errorMessage).some((errorMessage) => errorMessage !== \"\") &&\r\n      setFormState({\r\n        isSubmit: true,\r\n      });\r\n\r\n    setMessage({\r\n      ...message,\r\n      ...errorMessage,\r\n    });\r\n  };\r\n\r\n  const getErrorMessageFromMessageState = (name) => {\r\n    return message[name];\r\n  };\r\n\r\n  return {\r\n    message,\r\n    setMessage,\r\n    handleInputConditions,\r\n    handleSubmitConditions,\r\n    getErrorMessageFromMessageState,\r\n  };\r\n};\r\n\r\nexport default useErrorMessage;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { style as S, defaultData as DATA } from \"./useStaticData\";\r\nimport { useInputValue, useFormState, useErrorMessage } from \"./useCustomHooks\";\r\n\r\nconst SubmitData = ({ approach, events }) => {\r\n  const { controlUpdateForm } = events;\r\n  const { getValueFromInputValue } = approach;\r\n  return (\r\n    <S.FormInfoWrapper>\r\n      <S.DataList>\r\n        {DATA.formData.map(\r\n          (data) =>\r\n            getValueFromInputValue(data.name) && (\r\n              <S.ListItem key={data.name}>\r\n                {data.title} : {getValueFromInputValue(data.name)}\r\n              </S.ListItem>\r\n            )\r\n        )}\r\n        <S.ButtonWrapper>\r\n          <S.Button onClick={controlUpdateForm}>修正</S.Button>\r\n          <S.Button>確認</S.Button>\r\n        </S.ButtonWrapper>\r\n      </S.DataList>\r\n    </S.FormInfoWrapper>\r\n  );\r\n};\r\n\r\nconst Radio = ({ info, handleInputValue, value, radioRef }) => {\r\n  const { radioContents, name } = info;\r\n  return (\r\n    <S.ListWrapper>\r\n      {radioContents.map((content, index) => (\r\n        <label key={index}>\r\n          <input\r\n            key={index}\r\n            onClick={(e) => {\r\n              handleInputValue(e, name);\r\n            }}\r\n            type=\"radio\"\r\n            name=\"radio\"\r\n            ref={content === value ? radioRef : null}\r\n            value={content}\r\n          />\r\n          {content}\r\n        </label>\r\n      ))}\r\n    </S.ListWrapper>\r\n  );\r\n};\r\n\r\nconst Section = ({ info, events, state, approaches, radioRef }) => {\r\n  const { handleInputValue } = events;\r\n  const { type, title, name, description, necessary } = info;\r\n  const { getErrorMessageFromMessageState, getValueFromInputValue } =\r\n    approaches;\r\n  return (\r\n    <S.SectionWrapper>\r\n      <S.SectionTitle necessary={necessary}>{title}</S.SectionTitle>\r\n      {description && (\r\n        <S.SectionDescription>{description}</S.SectionDescription>\r\n      )}\r\n      {type === \"text\" && (\r\n        <S.Input\r\n          state={state}\r\n          value={getValueFromInputValue(name)}\r\n          placeholder={\"請輸入您的\" + title}\r\n          onChange={(e) => {\r\n            handleInputValue(e, name);\r\n          }}\r\n        />\r\n      )}\r\n      {type === \"radio\" && (\r\n        <Radio\r\n          handleInputValue={handleInputValue}\r\n          value={getValueFromInputValue(name)}\r\n          info={info}\r\n          radioRef={radioRef}\r\n        />\r\n      )}\r\n      {getErrorMessageFromMessageState(name) && (\r\n        <S.SectionErrorMessage>\r\n          {getErrorMessageFromMessageState(name)}\r\n        </S.SectionErrorMessage>\r\n      )}\r\n    </S.SectionWrapper>\r\n  );\r\n};\r\n\r\nconst Info = () => {\r\n  return (\r\n    <S.InfoWrapper>\r\n      <S.InfoTitle>新拖延運動報名表單</S.InfoTitle>\r\n      <S.InfoContent>\r\n        <p>活動日期：2020/12/10 ~ 2020/12/11</p>\r\n        <p>活動地點：台北市大安區新生南路二段1號</p>\r\n      </S.InfoContent>\r\n      <p>* 必填</p>\r\n    </S.InfoWrapper>\r\n  );\r\n};\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <S.FooterWrapper>\r\n      <p>© 2020 © Copyright. All rights Reserved.</p>\r\n    </S.FooterWrapper>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const { inputValue, handleInputValue, getValueFromInputValue } =\r\n    useInputValue();\r\n\r\n  const { formState, setFormState, controlUpdateForm } = useFormState();\r\n\r\n  const {\r\n    message,\r\n    handleInputConditions,\r\n    handleSubmitConditions,\r\n    getErrorMessageFromMessageState,\r\n  } = useErrorMessage(setFormState, getValueFromInputValue);\r\n\r\n  const radioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // 從 localStorage 判斷有沒有值，有的話把加入屬性 checked=\"true\"\r\n    radioRef.current && radioRef.current.setAttribute(\"checked\", true);\r\n\r\n    const writeValueToLocalStorage = () => {\r\n      window.localStorage.setItem(\r\n        \"localInputValue\",\r\n        JSON.stringify(inputValue)\r\n      );\r\n      window.localStorage.setItem(\"localMessage\", JSON.stringify(message));\r\n      window.localStorage.setItem(\"localFormState\", JSON.stringify(formState));\r\n    };\r\n\r\n    writeValueToLocalStorage();\r\n    if (formState.isSubmit === true) {\r\n      writeValueToLocalStorage();\r\n    }\r\n  }, [inputValue, message, formState]);\r\n\r\n  return (\r\n    <S.Wrapper onClick={handleInputConditions}>\r\n      {formState.isSubmit && (\r\n        <SubmitData\r\n          events={{ controlUpdateForm }}\r\n          state={formState}\r\n          approach={{ getValueFromInputValue }}\r\n        />\r\n      )}\r\n      <S.FormWrapper>\r\n        <Info />\r\n        {DATA.formData.map((data, index) => (\r\n          <Section\r\n            key={index}\r\n            state={formState}\r\n            radioRef={radioRef}\r\n            approaches={{\r\n              getErrorMessageFromMessageState,\r\n              getValueFromInputValue,\r\n            }}\r\n            info={{ ...data }}\r\n            events={{ handleInputValue }}\r\n            radioRef={radioRef}\r\n          />\r\n        ))}\r\n        <S.Button onClick={handleSubmitConditions}>送出</S.Button>\r\n      </S.FormWrapper>\r\n      <Footer />\r\n    </S.Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}